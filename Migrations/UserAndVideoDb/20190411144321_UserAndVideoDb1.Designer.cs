// <auto-generated />
using System;
using FakeBilibili.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FakeBilibili.Migrations.UserAndVideoDb
{
    [DbContext(typeof(UserAndVideoDbContext))]
    [Migration("20190411144321_UserAndVideoDb1")]
    partial class UserAndVideoDb1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.2-servicing-10034")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FakeBilibili.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Fans");

                    b.Property<string>("Follows");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("FakeBilibili.Models.Video", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AuthorId");

                    b.Property<string>("Category")
                        .IsRequired();

                    b.Property<TimeSpan>("Duration");

                    b.Property<DateTime>("PublishDateTime");

                    b.Property<string>("Tag");

                    b.Property<string>("VideoType")
                        .IsRequired();

                    b.Property<int>("VideoView");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.ToTable("Videos");
                });

            modelBuilder.Entity("FakeBilibili.Models.Video", b =>
                {
                    b.HasOne("FakeBilibili.Models.User", "Author")
                        .WithMany("Works")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
